/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVerifyWorldID,
  IVerifyWorldIDInterface,
} from "../../../contracts/interfaces/IVerifyWorldID";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isVerifiedHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVerifyWorldID__factory {
  static readonly abi = _abi;
  static createInterface(): IVerifyWorldIDInterface {
    return new Interface(_abi) as IVerifyWorldIDInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVerifyWorldID {
    return new Contract(address, _abi, runner) as unknown as IVerifyWorldID;
  }
}
